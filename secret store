🧩 Product Overview: A Digital Vault for Everyone
You're creating a secure file storage platform — call it a Digital Vault — built to serve two types of users:

Regular people who want privacy without needing a tech degree

High-risk users who need legal-grade protection, secrecy, or insurance

The value lies in giving both groups real encryption, self-sovereignty, and fail-safes, without compromising UX.

👥 Audience Breakdown
1. Regular Users ("Everyday Privacy")
Target: Teens, families, freelancers, partners, creatives, etc.

What They Want:
To store private files (IDs, journals, photos, contracts)

Easy-to-use app, works on phone/laptop

Sharing without risking public exposure

Knowing their files aren’t being mined or viewed

File recovery in case of lost password/device

UX Considerations:
Clean UI, simple terminology

“Google Drive, but no spying”

Backup/recovery options (recovery phrase, MFA)

Soft onboarding, maybe passwordless (magic links/passkeys)

2. Unusual / Power Users ("High-Stakes Privacy")
Target: Journalists, whistleblowers, lawyers, victims, activists

What They Want:
Control over who, when, and how their data is accessed

A zero-trust architecture — you (the platform) should never see their files

A dead-man switch, in case they disappear or die

Immutable logs for legal proof / court cases

Options to delete remotely or auto-wipe

Possibly geo-fenced access (files can only be opened in X region)

UX Considerations:
“Advanced Mode” toggle to unlock powerful tools

No forced identity — use aliases, crypto wallets, or burner emails

No backup or password recovery unless explicitly configured

💸 Plans & Pricing Strategy
Tiered approach to monetise wisely:

Plan	Audience	Price	Key Features
🟢 SafeKeep (Free)	Regular users	Free	Encrypted uploads, 2FA, recovery options, mobile-friendly
🟡 DeepVault	Serious privacy users	£5/month	End-to-end encryption, hidden filenames, no analytics
🔴 Obsidian Mode	High-risk users	£10–20/month	Dead-man switch, audit trails, no recovery, auto-purge
⚫ Legacy Vault	Legal/posthumous use	Custom	Delayed unlocks, co-signing (e.g., with lawyer), export to notarised PDF

This lets regular people start for free, and converts serious users into paid subscribers. You’re monetising risk, not just storage.

🔐 Core Platform Features (Must-Haves)
Feature	Description
Client-side encryption	Files are encrypted in-browser before upload. You never see the plain text.
Zero-knowledge architecture	No file contents, no metadata, no IP logs unless explicitly enabled.
Immutable audit logs	File hash, upload/download timestamps, IP/device (optional). Use AWS QLDB or append-only log.
2FA / biometric unlock	Add an extra layer for sensitive users (e.g., TouchID or YubiKey).
Secure file sharing	End-to-end encrypted links with expiry or access restrictions.
Passwordless login	Passkeys, recovery phrases, or one-time magic links to reduce friction.

🧠 Advanced/Power Features (Optional for Most, Critical for Some)
Feature	Why it Matters
Dead-man switch	If user goes inactive, files are released or deleted — useful for whistleblowers, abuse victims, etc.
Self-destructing files	Burn after reading, one-time access, timed expiry — adds protection.
"Release on death" triggers	Store a final message or documents that unlock only after a condition (e.g. no logins for 90 days, confirmation from a trusted contact).
Geofenced access	Files only decryptable in certain countries or networks (basic IP fencing or device certs).
File notarisation/export	Package files + logs + timestamps into a court-usable export bundle.
Open API / CLI	Power users can build automations or integrate into custom workflows (e.g., a whistleblower tool).

🛠 Tech Stack (Recommended AWS-first)
Area	Tech
Storage	AWS S3 (Object Lock, versioning)
Encryption	WebCrypto API / libsodium (client-side)
Identity/Auth	AWS Cognito (with FIDO2/passkeys)
Audit Logs	AWS QLDB, DynamoDB, or custom immutable logs
Triggers	AWS Lambda for dead-man switch, expiry logic
App Hosting	React/Next.js frontend, Node.js backend (or Go if you want security & performance)
Monitoring	CloudWatch (internal only, no user data tracking)

🔮 Taglines & Positioning (Feel Free to Use)
“Built for Everyone. Trusted by No One.”

“Secure your secrets — even from us.”

“Private storage for your stories, your safety, your silence.”

“If your life depended on one file — where would you put it?”

✅ What to Do Next (Your Move)
Define MVP Scope

SafeKeep basic: upload, encrypt, store, share

Basic auth, recovery, clean UI

Design Advanced Mode

Optional toggle in settings → unlock dead-man, logs, file expiry

Start Landing Page Copy

Split messaging: “Simple for families. Secure enough for whistleblowers.”

Build Initial AWS Arch

Get encryption, storage, and user auth working first

Decide Your Recovery Policy

Will you allow password recovery? Or make that a paid feature? This changes your liability and trust model.

